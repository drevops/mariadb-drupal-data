version: 2.1

jobs:
  build:
    docker:
      - image: drevops/ci-runner:24.11.0
        environment:
          BUILDX_VERSION: v0.10.4
          BUILDX_PLATFORMS: linux/amd64,linux/arm64,linux/arm/v7
    working_directory: /root/project
    steps:
      - checkout
      - run:
          name: Lint scripts
          command: |
            shfmt -i 2 -ci -s -d seed-db.sh tests/bats/*.bash tests/bats/*.bats
            shellcheck seed-db.sh tests/bats/*.bash tests/bats/*.bats
      - setup_remote_docker
      - run:
          name: Create Docker builder and install emulators
          command: |
            docker buildx create --name multiarch --driver docker-container --use
            docker run -it --rm --privileged tonistiigi/binfmt --install all
      - run:
          name: Run Goss tests
          command: |
            docker build -t gosstestorg/gosstestimage:goss-test-tag .
            GOSS_FILES_PATH=tests/dgoss dgoss run -i gosstestorg/gosstestimage:goss-test-tag
      - run:
          name: Run Bats tests
          command: |
            npm --prefix tests/bats ci
            echo "${DOCKER_PASS}" | docker login --username "${DOCKER_USER}" --password-stdin
            kcov --include-pattern=.sh,.bash --bash-parse-files-in-dir=. --exclude-pattern=vendor,node_modules,coverage $(pwd)/coverage tests/bats/node_modules/.bin/bats tests/bats
      - store_artifacts:
          path: coverage
      - run:
          name: Upload code coverage reports to Codecov
          command: codecov --fail-on-error -t $CODECOV_TOKEN -s coverage
      - run:
          name: Deploy image
          command: |
            if [ -n "${CIRCLE_TAG}" ]; then
              export TAG="${CIRCLE_TAG}"
            elif echo "${CIRCLE_BRANCH}" | grep -q "^renovate"; then
              echo "Skipping deploy for branch ${CIRCLE_BRANCH}"
              exit 0
            elif [ "${CIRCLE_BRANCH}" != "main" ]; then
              export TAG="$(echo ${CIRCLE_BRANCH} | sed 's/[^a-zA-Z0-9]/-/g')"
            fi
            echo "${DOCKER_PASS}" | docker login --username "${DOCKER_USER}" --password-stdin
            DOCKER_BUILDKIT=1 docker buildx build --no-cache --platform "${BUILDX_PLATFORMS}" --tag drevops/mariadb-drupal-data:${TAG:-canary} --push .

workflows:
  version: 2
  commit:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
            branches:
              only: /^main$|^feature\/[a-zA-z0-9\-\.]+$|^renovate\/.*/
